From bacf4ef8a463d4098e229e4d992a3aff56ab97f2 Mon Sep 17 00:00:00 2001
From: Manuel Bucher <manuel@mozilla.com>
Date: Mon, 12 Aug 2024 09:29:20 +0200
Subject: [PATCH] Bug # - Wireguard integration in Firefox

---
 toolkit/content/aboutNetworking.html          |  19 +++
 toolkit/content/aboutNetworking.js            | 156 ++++++++++++++++++
 .../en-US/toolkit/about/aboutNetworking.ftl   |   4 +
 toolkit/themes/shared/aboutNetworking.css     |   5 +
 4 files changed, 184 insertions(+)

diff --git a/toolkit/content/aboutNetworking.html b/toolkit/content/aboutNetworking.html
index 9b95e19eec9fb..d7dcf47266efa 100644
--- a/toolkit/content/aboutNetworking.html
+++ b/toolkit/content/aboutNetworking.html
@@ -60,6 +60,13 @@
           data-l10n-id="about-networking-networkid"
         ></span>
       </div>
+      <hr />
+      <div class="category category-no-icon" id="category-wireguard">
+        <span
+          class="category-name"
+          data-l10n-id="about-networking-wireguard"
+        ></span>
+      </div>
     </div>
     <div class="main-content">
       <div class="header">
@@ -307,6 +314,18 @@
           </tbody>
         </table>
       </div>
+      <div id="wireguard" class="tab" hidden="true">
+        <button
+          data-l10n-id="about-networking-wireguard-connect"
+          id="wireguard_connect"
+        ></button>
+        <button
+          data-l10n-id="about-networking-wireguard-disconnect"
+          id="wireguard_disconnect"
+        ></button>
+        <textarea id="wireguard_config"></textarea>
+        <div id="wireguard_output" style="white-space: pre-wrap"></div>
+      </div>
     </div>
   </body>
 </html>
diff --git a/toolkit/content/aboutNetworking.js b/toolkit/content/aboutNetworking.js
index fe68d6c10b0cc..1bc60d03f0227 100644
--- a/toolkit/content/aboutNetworking.js
+++ b/toolkit/content/aboutNetworking.js
@@ -19,6 +19,11 @@ const gNetLinkSvc =
     Ci.nsINetworkLinkService
   );
 
+const Subprocess = ChromeUtils.importESModule(
+  "resource://gre/modules/Subprocess.sys.mjs"
+).Subprocess;
+const pps = Cc["@mozilla.org/network/protocol-proxy-service;1"].getService();
+
 const gRequestNetworkingData = {
   http: gDashboard.requestHttpConnections,
   sockets: gDashboard.requestSockets,
@@ -294,6 +299,13 @@ function init() {
       sectionButton.click();
     }
   }
+
+  let wireguardConnectButton = document.getElementById("wireguard_connect");
+  wireguardConnectButton.addEventListener("click", wireguardConnect);
+  let wireguardDisconnectButton = document.getElementById(
+    "wireguard_disconnect"
+  );
+  wireguardDisconnectButton.addEventListener("click", wireguardDisconnect);
 }
 
 function show(button) {
@@ -421,3 +433,147 @@ function displayHTTPSRRLookup(data) {
 
   parent.replaceChild(new_cont, cont);
 }
+
+function WireguardChannelFilter() {}
+WireguardChannelFilter.prototype = {
+  QueryInterface: ChromeUtils.generateQI(["nsIProtocolProxyChannelFilter"]),
+  applyFilter(channel, pi, cb) {
+    cb.onProxyFilterResult(
+      pps.newProxyInfo(
+        "socks",
+        "127.0.0.1",
+        1080,
+        "",
+        "",
+        Ci.nsIProxyInfo.TRANSPARENT_PROXY_RESOLVES_HOST,
+        10,
+        null // do not fall back when wireguard not ready
+      )
+    );
+  },
+};
+
+var wireguardState = "none";
+var wireguard = null;
+var wireguardOnlyProxyFilter;
+
+function parseWireguardConfig(config) {
+  let peer_addr = null;
+  let peer_pub_key = null;
+  let device_priv_key = null;
+  let device_ip = null;
+
+  config.split("\n").forEach(line => {
+    let cmd = line.split(" = ");
+    if (cmd[0].trim() == "PrivateKey") {
+      device_priv_key = cmd[1].trim();
+    } else if (cmd[0].trim() == "Address") {
+      device_ip = cmd[1];
+      device_ip = device_ip.split(",")[0].trim(); // select first one (assume its ipv4)
+      device_ip = device_ip.split("/")[0]; // remove bitmask
+    } else if (cmd[0].trim() == "PublicKey") {
+      peer_pub_key = cmd[1].trim();
+    } else if (cmd[0].trim() == "Endpoint") {
+      peer_addr = cmd[1].trim();
+    }
+  });
+  dump(
+    "result " +
+      peer_addr +
+      " " +
+      peer_pub_key +
+      " " +
+      device_priv_key +
+      " " +
+      device_ip +
+      "\n"
+  );
+  if (
+    peer_addr != null &&
+    peer_pub_key != null &&
+    device_priv_key != null &&
+    device_ip != null
+  ) {
+    return {
+      peer_addr,
+      peer_pub_key,
+      device_priv_key,
+      device_ip,
+    };
+  }
+  return null;
+}
+
+async function wireguardConnect() {
+  // only start it once.
+  if (wireguardState != "none") {
+    return;
+  }
+  wireguardState = "running";
+
+  // get wireguard config
+  let config = document.getElementById("wireguard_config");
+  config = parseWireguardConfig(config.value);
+  if (config == null) {
+    document.getElementById("wireguard_output").innerText =
+      "Failed to parse Wiregard config";
+    wireguardState = "none";
+    return;
+  }
+
+  let environment = {
+    NO_COLOR: "1",
+    ONETUN_PRIVATE_KEY: config.device_priv_key,
+  };
+
+  wireguardOnlyProxyFilter = new WireguardChannelFilter();
+  pps.registerChannelFilter(wireguardOnlyProxyFilter, 11);
+
+  Subprocess.call({
+    command: "/home/user/git/onetun/target/release/onetun",
+    arguments: [
+      //onetun [src_host:]<src_port>:<dst_host>:<dst_port>[:TCP,UDP,...] [...]    \
+      // using the mullvad socks proxy and onetun port forwarding for now:
+      // https://mullvad.net/en/help/socks5-proxy#get-started
+      "127.0.0.1:1080:10.64.0.1:1080",
+      //--endpoint-addr <public WireGuard endpoint address>                   \
+      "--endpoint-addr",
+      config.peer_addr,
+      //--endpoint-public-key <the public key of the peer on the endpoint>    \
+      "--endpoint-public-key",
+      config.peer_pub_key,
+      //--source-peer-ip <IP assigned to onetun>                              \
+      "--source-peer-ip",
+      config.device_ip,
+    ],
+    environmentAppend: true,
+    environment,
+    stderr: "stdout",
+  }).then(proc => {
+    proc.stdin.close();
+    async function dumpPipe(pipe) {
+      let debugOutput = document.getElementById("wireguard_output");
+      let data = await pipe.readString();
+      while (data) {
+        debugOutput.innerText += data;
+        data = await pipe.readString();
+      }
+      // wireguard shut down. Process not running anymore.
+      wireguard = null;
+      wireguardState = "none";
+      Services.obs.removeObserver(wireguardDisconnect, "xpcom-shutdown");
+    }
+    wireguard = proc;
+    Services.obs.addObserver(wireguardDisconnect, "xpcom-shutdown");
+    dumpPipe(proc.stdout);
+  });
+}
+
+function wireguardDisconnect() {
+  if (wireguardState != "running") {
+    return;
+  }
+  wireguardState = "shutdown";
+  wireguard.kill();
+  pps.unregisterChannelFilter(wireguardOnlyProxyFilter);
+}
diff --git a/toolkit/locales/en-US/toolkit/about/aboutNetworking.ftl b/toolkit/locales/en-US/toolkit/about/aboutNetworking.ftl
index 8be57fc2d750c..0fdcb679310cc 100644
--- a/toolkit/locales/en-US/toolkit/about/aboutNetworking.ftl
+++ b/toolkit/locales/en-US/toolkit/about/aboutNetworking.ftl
@@ -66,3 +66,7 @@ about-networking-networkid-is-up = Link is up
 about-networking-networkid-status-known = Link status is known
 
 ##
+
+about-networking-wireguard = Wireguard
+about-networking-wireguard-connect = Connect
+about-networking-wireguard-disconnect = Disconnect
\ No newline at end of file
diff --git a/toolkit/themes/shared/aboutNetworking.css b/toolkit/themes/shared/aboutNetworking.css
index 79a473050b793..e04ed04301a66 100644
--- a/toolkit/themes/shared/aboutNetworking.css
+++ b/toolkit/themes/shared/aboutNetworking.css
@@ -82,3 +82,8 @@ td {
 #clearHTTPCache {
   margin-bottom: var(--space-xlarge);
 }
+
+#wireguard_config {
+  width: 100%;
+  height: 20em;
+}
-- 
2.46.0

